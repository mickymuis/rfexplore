{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ed0e1f22bf7068bb1c6f","webpack:///../index.js","webpack:///./rfexplore/rfexplore.js","webpack:///./rfexplore/automaton.js","webpack:///./rfexplore/viewport.js","webpack:///./rfexplore/value_equals.js","webpack:///./rfexplore/menubar.js"],"names":["UIController","viewport","autoUpdate","_viewmode","_folded","_palette","_automaton","_oldopts","_opts","mode","base","folds","rule","input","setOnInputClicked","i","incrementInput","update","render","change","generate","automaton","console","log","viewmode","palette","JSON","parse","stringify","step","col","width","foldToRight","inputSize","delta","length","j","value","row","unshift","c","m","b","maxRules","App","container_id","container","document","getElementById","body","createElement","className","appendChild","init","controller","toolbox","setupToolbox","menubar","setupMenubar","a_ctrls","addGroup","floatLeft","addLink","step_ctrls","floatCenter","rule_label","addButton","action","text","r_ctrls","floatRight","dat","GUI","f_a","addFolder","add","name","open","f_v","Brick","Diamond","Circle","f_c","addColor","onFinishChange","f_r","Automaton","maxSteps","opts","_rows","Array","push","slice","reverse","_curRow","_curPos","_folds","ttable","makeTTable","nodeCount","rowLength","tt","rulesize","Math","pow","decimal","floor","ttIndex","A","mult","index","first","_transpose","isLast","n","last","next","_next","previous","_previous","pos","error","nextPos","foldValue","len","fill","parents","done","_mirrored","_row","unfoldedRowLength","lastInputRow","diamondWidth","sqrt","Viewport","elem","disabledColor","backgroundColor","viewportWidth","offsetWidth","viewportHeight","offsetHeight","_scene","_aspect","_cameraPersp","_cameraOrtho","_controls","_sceneHeight","_renderer","_lights","_raycaster","THREE","Raycaster","_mouse","Vector2","_model","geometry","attr_normal","buf_normal","attr_color","buf_color","attr_position","buf_position","offset","template_size","node_count","mesh","input_pickers","picked","_animation","animateGeometry","node","_inputClickCallback","animate","requestAnimationFrame","_updateCellsAnimated","Scene","background","Color","PerspectiveCamera","OrthographicCamera","WebGLRenderer","antialias","setSize","domElement","position","z","OrbitControls","addEventListener","lights","AmbientLight","set","target","Vector3","DirectionalLight","window","_onWindowResize","e","_onDocumentMousemove","_onClick","updateCamera","sceneHeight","aspect","updateProjectionMatrix","left","right","top","bottom","func","clearGeometry","scene","children","remove","populate","_updateGeometry","_updateCells","event","x","clientX","innerWidth","y","clientY","innerHeight","setFromCamera","intersects","intersectObjects","material","opacity","object","userData","_setColor","color","M","r","g","updateRange","count","old_offset","_nodeColor","_calcNodeOffset","rowoffs","only_clean","rows","needsUpdate","dispose","template","MeshBasicMaterial","side","DoubleSide","vertexColors","VertexColors","PlaneBufferGeometry","rotateZ","PI","scale","CircleBufferGeometry","toNonIndexed","getAttribute","array","MeshStandardMaterial","metalness","SphereBufferGeometry","BufferGeometry","array_size","Float32Array","Uint8Array","Int16Array","addInstance","translate","positions","normals","foldedPosition","inputLength","p","coneCol","coneRow","fold","coneRowWidth","phi","radius","cos","sin","yoffset","heightstep","clone","picker_material","transparent","picker_mesh","Mesh","BufferAttribute","normalized","addAttribute","computeBoundingSphere","controls","reset","enableRotate","equals","a","enforce_properties_order","cyclic","_equals","s","l","toString","call","valueOf","source","global","ignoreCase","multiline","lastIndex","reference_equals","properties","hasOwnProperty","object_references","_reference_equals","TEXT_TYPE","BUTTON_TYPE","NO_ACTION","FUNC_ACTION","URL_ACTION","DROPDOWN_ACTION","Menuitem","iconclass","type","_text","_iconclass","_type","_action","_callback","_liNode","_aNode","_textNode","_iconNode","_appendElem","obj","setAttribute","createTextNode","_clicked","t","nodeValue","Menubar","subgroup","parent","panel","parentContainer","_subgroup","_parent","_rootPanel","_ulNode","_items","_groups","group","addPanel","item"],"mappings":"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","file":"rfexplore.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rfexplore\"] = factory();\n\telse\n\t\troot[\"rfexplore\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed0e1f22bf7068bb1c6f","import rfexplore from './src/rfexplore/rfexplore.js';\n\nexport default rfexplore;\n\n\n\n// WEBPACK FOOTER //\n// ../index.js","import Automaton from \"./automaton.js\";\nimport Viewport from \"./viewport.js\";\nimport Menubar from \"./menubar.js\";\nimport equals from \"./value_equals.js\";\n\nclass UIController {\n    constructor( viewport ) {\n        this.viewport =viewport;\n        this.autoUpdate =true;\n        this._viewmode ='circle';\n        this._folded =false;\n        this._palette = [ '#ff5511', '#33ffcc', '#ffaa33', '#5E69FF' ]; \n        this._automaton =null;\n        this._oldopts = null;\n        this._opts = { // Options to Automaton constructor\n            mode: 2,\n            base: 2,\n            folds: 0,\n            rule: 6,\n            input: [ 0, 1, 1, 0, 0, 1, 0 ]\n        }; \n\n        viewport.setOnInputClicked( (i)=>{this.incrementInput(i);} );\n    }\n    update() {\n        if( this.autoUpdate )\n            this.render();\n    }\n    render() {\n\n        let change =false;\n\n        if( !equals( this._oldopts, this._opts ) || this._automaton === null ) {\n            this._automaton = new Automaton( this._opts );\n            this._automaton.generate();\n            this.viewport.automaton = this._automaton;\n            change =true;\n        }\n        else console.log( 'not changed' );\n\n        let viewmode = this._folded ? 'folded' : this._viewmode;\n        if( viewmode != this.viewport.viewmode ) {\n            this.viewport.viewmode = viewmode;\n            change =true;\n        }\n        \n        if( !equals( this._palette, this.viewport.palette ) ) {\n            this.viewport.palette =this._palette;\n            change =true;\n        }\n\n        if( change )\n            this.viewport.update();\n\n        // Caching\n        this._oldopts =JSON.parse( JSON.stringify( this._opts ) );\n    }\n\n    step() {\n        if( this._automaton === null )\n            render();\n\n        this._automaton.step();\n        this.viewport.update();\n    }\n\n    incrementInput( col ) {\n        let automaton = this._automaton;\n        if( col >= automaton.width )\n            return;\n        // If the automaton is left-folding, the input is on the right hand side\n        let i = this._opts.foldToRight ? col : col - (automaton.width - automaton.inputSize)\n        let input = this._opts.input;\n\n        // We may need to expand the input array using values from the automaton\n        let delta =0;\n        if( i >= input.length ) {\n            for( let j = input.length; j <= i; j++ ) {\n                input[j] = automaton.value( { col: j, row: 0 } );\n                delta++;\n            }\n        } else if( i < 0 ) {\n            for( let j = automaton.width - automaton.inputSize - 1; j >= col; j-- ) {\n                input.unshift( automaton.value( { col: j, row: 0 } ) );\n                delta++;\n            }\n            i =0;\n        }\n        this._opts.folds -= delta;\n        input[i] = (input[i] === (this._opts.base - 1)) ? 0 : input[i]+1;\n//        console.log( 'picked input ' + i + \" new array\" + input );\n        this.render();\n    }\n\n    // Properties\n    get color0()        { return this._palette[0]; }\n    set color0(c)       { this._palette[0] =c; this.update(); }\n    get color1()        { return this._palette[1]; }\n    set color1(c)       { this._palette[1] =c; this.update(); }\n    get color2()        { return this._palette[2]; }\n    set color2(c)       { this._palette[2] =c; this.update(); }\n    get color3()        { return this._palette[3]; }\n    set color3(c)       { this._palette[3] =c; this.update(); }\n\n    get viewmode()      { return this._viewmode; }\n    set viewmode(m)     { this._viewmode =m;  this.update(); }\n    get mode()          { return this._opts.mode; }\n    set mode(i)         { this._opts.mode =i; this.update(); }\n    get base()          { return this._opts.base; }\n    set base(i)         { this._opts.base =i; this.update(); }\n    get folded()        { return this._folded; }\n    set folded(b)       { this._folded =b; this.update(); }\n    get folds()         { return this._opts.folds; }\n    set folds(i)        { this._opts.folds =i; this.update(); }\n    get rule()          { return this._opts.rule; }\n    set rule(i)         { if( i >= 0 && i < this._automaton.maxRules ) { this._opts.rule =i; this.update(); } }\n}\n\nclass App {\n    constructor( { container_id = '' } ) {\n        console.log( 'hallo ik ben een poes, dag vrienden' );\n\n        // Create a viewport container inside the given element id\n        this.container =document.getElementById( container_id );\n        if( typeof this.container == 'undefined' )\n            this.container =document.body;\n\n        let viewport = document.createElement( 'div' )\n            viewport.className = 'viewport';\n        this.container.appendChild( viewport );\n\n        // Let's set-up the viewport\n        this.viewport = new Viewport( viewport );\n        this.viewport.init();\n\n        // Create the controller for the user controls\n        this.controller = new UIController( this.viewport );\n\n        // Set-up UI\n        this.toolbox =null;\n        this.setupToolbox();\n        this.menubar =null;\n        this.setupMenubar();\n\n        // Render initial settings\n        this.controller.render();\n\n        /*let a = this.controller._automaton;\n        let n = a.first();\n        do {\n            console.log( `Node: ${n.row},${n.col}` );\n            n = a.next(n);\n        } while( a.isLast(n) );*/\n    }\n    setupMenubar() {\n        // Make a menubar \n        this.menubar = new Menubar( this.container );\n        \n        let a_ctrls = this.menubar.addGroup().floatLeft(); \n        a_ctrls.addLink( 'RFExplore' );\n\n        let step_ctrls = this.menubar.addGroup().floatCenter();\n        let rule_label =null;\n        step_ctrls.addButton( '', 'fa fa-backward' ).action( \n                ()=> {\n                    this.controller.rule = this.controller.rule - 1;\n                    rule_label.text = 'Rule #' + this.controller.rule;\n                } );\n        rule_label = step_ctrls.addLink( 'Rule #' + this.controller.rule );\n        step_ctrls.addButton( '', 'fa fa-forward' ).action( \n                ()=> {\n                    this.controller.rule = this.controller.rule + 1;\n                    rule_label.text = 'Rule #' + this.controller.rule;\n                } );\n\n        let r_ctrls = this.menubar.addGroup().floatRight();\n        r_ctrls.addButton( '', 'fa fa-arrows-alt' );\n        r_ctrls.addButton( '', 'fa fa-step-forward' ).action( ()=>{ this.controller.step(); } );\n        r_ctrls.addButton( 'Render', 'fa fa-camera-retro' );\n        r_ctrls.addLink( '', 'fa fa-circle-o' );\n\n    }\n    setupToolbox() {\n        this.toolbox = new dat.GUI();\n\n        // Automaton toolbox\n        let f_a = this.toolbox.addFolder( 'Automaton' );\n        f_a.add( this.controller, 'mode', 2, 2 ).step(1).name( 'Mode' );\n        f_a.add( this.controller, 'base', 2, 4 ).step(1).name( 'Base' );\n        f_a.add( this.controller, 'folds').name( '#Folds' );\n        f_a.open();\n\n        // Visualisation toolbox\n        let f_v = this.toolbox.addFolder( 'Visualisation' );\n        f_v.add( this.controller, 'viewmode', { Brick : 'brick', Diamond: 'diamond', Circle: 'circle' } ).name( 'Cell shape' );\n        f_v.add( this.controller, 'folded' ).name( 'Folded' );\n        f_v.open();\n\n        // Colors toolbox\n        let f_c = this.toolbox.addFolder( 'Colors' );\n        f_c.addColor( this.controller, 'color0' ).name( '0' ).onFinishChange( () => { this.controller.update(); } ) ;\n        f_c.addColor( this.controller, 'color1' ).name( '1' );\n        f_c.addColor( this.controller, 'color2' ).name( '2' );\n        f_c.addColor( this.controller, 'color3' ).name( '3' );\n        f_c.open();\n\n        // Render toolbox\n        let f_r = this.toolbox.addFolder( 'Render' );\n        f_r.add( this.controller, 'autoUpdate' ).name( 'Auto-update' );\n        f_r.add( this.controller, 'render' ).name( 'Render' );\n    }\n}\n\nexport default {\n    App : App\n};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./rfexplore/rfexplore.js","\"use strict\";\n\nexport default class Automaton {\n\n/* \n * Constructs a new Automaton given 'opts' and generates a transition table \n */\n    constructor( \n        {\n            base = 2,\n            mode = 2,\n            rule = 0,\n            input = [ 0, 0],\n            maxSteps = 0,\n            folds = 0,\n            foldToRight = false\n        } = []\n    ) {\n        this.opts = {\n            base: base,\n            mode: mode,\n            rule: rule,\n            input: input,\n            maxSteps: maxSteps,\n            folds: folds,\n            foldToRight: foldToRight\n        };\n/*        this._= {\n            curRow : 1, // row 0 is the top (input) row\n            curPos : ( foldToRight ? this._rows[0].length-2 : 0 ),\n            folds: 0\n        };*/\n        // Internal state\n        this._rows = new Array();\n        this._rows.push( foldToRight? input.slice() : input.slice().reverse() );\n        this._curRow = 0; // row 0 is the top (input) row\n        this._curPos = this._rows[0].length -1;\n        this._folds  = 0;\n       \n        this.maxRules =0;\n        this.ttable = this.makeTTable( base, mode, rule );\n        this.nodeCount = this.width;\n        this.inputSize = input.length;\n    }\n\n    /* \n     * General functions that define the dimensions \n     */\n    get width() {\n        return this._rows[0].length;\n    }\n\n    get rows() {\n        return this._rows.length;\n    }\n\n    rowLength( i ) {\n        return this._rows[i].length;\n    }\n\n    /*\n     * Generate a transition table given a base, mode and rule number\n     * Returns an array\n     */\n    makeTTable( base, mode, rule ) {\n        var tt = new Array();\n        let rulesize = Math.pow( base, mode );\n        this.maxRules = Math.pow( base, rulesize );\n\n        console.log( \"Transition table for rule #\" + rule + \" / \" + this.maxRules + \" * \" + rulesize );\n        if( rulesize > this.maxRules ) {\n            return null;\n        }\n\n        for( let i = 0; i < rulesize; i++ )\n            tt[i] = 0;\n\n        let decimal = rule; // Rule in base 10\n        let i = rulesize -1;\n        while( i >= 0 && decimal > 0 ) {\n            tt[i] = decimal % base;\n            decimal = Math.floor( decimal / base );\n            i--;\n        }\n        for( let i = 0; i < rulesize; i++ )\n            console.log( i + \": \" + tt[i] );\n        return tt;\n    }\n\n    /*\n     * Given a base, mode and set of input nodes A (A.length == mode),\n     * returns the index of the transition table that contains the reduction rule\n     * for A[0] .. A[mode-1] -> b\n     */\n    ttIndex( base, mode, A ) {\n        let mult =1;\n        let index =0;\n        for( let i = mode-1; i >= 0; i-- ) {\n            index += A[i] * mult;\n            mult *= base;\n        }\n        return index;\n    }\n\n    first() {\n        return this._transpose( { col: 0, row: 0 } );\n    }\n\n    isLast( {col, row} ) {\n        let n = this._transpose( { col: col, row: row } );\n        return (n.col === this._curPos && n.row === this._curRow);\n    }\n\n    /*\n     * Return the position { col, row } of the most recently calculated node\n     */\n    last() {\n        return this._transpose( { col: this._curPos, row: this._curRow } );\n    }\n\n    /*\n     * Given a column and row, return the position of the next node that need to be calculated\n     * Returns object in the form of { col, row }\n     */\n    next( { col, row }  ) {\n        return this._transpose( this._next( this._transpose( { col: col, row: row } ) ) );\n    }\n\n    /*\n     * Given a column and row, return the position of the previously calculated node\n     * Returns object in the form of { col, row }\n     */\n    previous( { col, row } ) {\n        return this._transpose( this._previous( this._transpose( { col: col, row: row } ) ) ); \n    }\n\n    /* Given a column and row, return the value of the node in that position\n     * Note that a bounds check is omitted for performance\n     */\n    value( { col, row } ) {\n        let pos = this._transpose( { col: col, row: row } );\n        return this._rows[pos.row][pos.col];\n    }\n\n    /*\n     * Advance the automaton by one step\n     * This step may either be a reduction step or a fold\n     */\n    step() { \n        if( this._curRow === 0 && this._rows.length === 0 ) {\n            console.error( \"Automaton: undefined top row, there is no input.\" );\n            return;\n        }\n        // Step 0. compute the position of the next cell\n        let nextPos = this._next( { col: this._curPos, row: this._curRow } );\n        this._curRow = nextPos.row;\n        this._curPos = nextPos.col;\n\n        if( this._curRow === 0 ) {\n            //console.log( \"fold\" );\n            // Top row, which means the next step can only be a fold\n            // Step 1. extend all rows by one\n            for( let i =0; i < this._rows.length; i++ ) {\n                // push\n                this._rows[i][this._rows[i].length] = -1;\n            }\n            // Step 2. copy ('fold') the apex/singleton row over to the top row\n            let foldValue = this._rows[this._rows.length-1][0];\n            this._rows[0][this._curPos] = foldValue;\n            // Step 3. extend the automata\n            this._rows.push( [-1] );\n            this._folds++;\n            this.nodeCount += this._rows.length;\n            return;\n        }\n        else if( typeof this._rows[this._curRow] === 'undefined' ) {\n            // We need to start a new row\n            let len = this._rows[this._curRow-1].length - 1;\n            this._rows.push( new Array(len) );\n            this._rows[this._curRow].fill( -1 );\n            this.nodeCount += len;\n        }\n        // Now we calculate the next iteration by reduction\n        // Step 1. get values from parent nodes (one row up)\n        let parents = this._rows[this._curRow-1].slice( this._curPos, this._curPos + this.opts.mode );\n\n        // Step 2. Use the transition table to obtain the value for the current node\n        var value =this.ttable[this.ttIndex( this.opts.base, this.opts.mode, parents )];\n        this._rows[this._curRow][this._curPos] = value;\n\n    }\n\n    generate( done ) {\n        \n        while( this._rows[this._curRow].length !== 1\n               || this._folds !== this.opts.folds ) {\n            this.step();\n        }\n\n\n        if( typeof done  === 'function' )\n            done( this );\n    }\n\n    /*\n     * If the automaton is set to expand (fold) to the left, \n     * we mirror the entire datastructure for optimization.\n     */\n    _mirrored() {\n        return !this.opts.foldToRight;\n    }\n\n    /*\n     * Return the transposed (mirrored) coordinates for {col,row}\n     * This translates internal coordinates to logical (abstracted) coordinates\n     */\n    _transpose( { col, row } ) {\n\n        if( this.opts.foldToRight )\n            return { col: col, row: row };\n        else\n            return { col: (this._rows[row].length-1) - col, row: row };\n    }\n\n    /*\n     * Calculate the next position using internal coordinates\n     */\n    _next( { col, row } ) {\n        let _row = this._rows[row];\n        let unfoldedRowLength = this.inputSize - row * (this.opts.mode-1);\n        let lastInputRow = this.inputSize-1; // TODO fix for mode > 2\n\n        if( col < unfoldedRowLength && row < lastInputRow ) {\n            if( col === unfoldedRowLength - 1 )\n                return { col: 0, row: row + 1 };\n            else\n                return { col: col + 1, row: row };\n        }\n        else if( col === 0 ) {\n            return { col: this.inputSize + (row - lastInputRow), row: 0 };\n        } \n\n        return { col: col - 1, row: row + 1 };\n\n\n       /* // Case 1: we're the apex, return to the top row\n        if( _row.length === 1 ) {\n            return { col: this._rows[0].length, row: 0 };\n        }\n        // Case 2: end of the row, advance one row\n        else if( col+1 >= _row.length ) {\n            if( row+1 < this.rows ) {\n                let _row = this._rows[row+1];\n                // Case 2a: We're folding, only one value missing\n                if( typeof _row !== 'undefined'  && _row[0] !== -1 )\n                    return { col: _row.length-1, row: row + 1 };\n            }\n            // Case 2b: Not folding, start at the beginning\n            return { col: 0, row: row + 1 };\n        }\n        // Case 3: next column is already calculated, advance one row\n        //else if( _row[col+1] !== -1 ) {\n        //    return { col: 0, row: row + 1 };\n        //}\n        // Case 4: just advance the column\n        return { col: col + 1, row: row };*/\n    }\n\n    /*\n     * Calculate the previous position using internal coordinates\n     */\n    _previous( { col, row } ) {\n        let pos = { col: col, row: row };\n        let _row = this._rows[row];\n    }\n\n} // class Automaton\n\n\n\n// WEBPACK FOOTER //\n// ./rfexplore/automaton.js","\n\"use strict\";\nimport equals from \"./value_equals.js\";\n\nconst diamondWidth = 1 * Math.sqrt( 2 );\n\nexport default class Viewport {\n    constructor( elem ) {\n\n        this.container =elem;\n        this.disabledColor = '#aaaaaa';\n        this.backgroundColor = '#bbbbbb'\n        \n        this.automaton = null;\n        // fixme: remove\n        this.palette = [ '#ff5511', '#33eeff', '#ff33dd' ];\n\n        this.viewportWidth = this.container.offsetWidth;\n        this.viewportHeight = this.container.offsetHeight;\n\n        this._viewmode = 'folded'; // one of 'brick', 'diamond', 'circle', 'folded'\n        this._scene = null;\n        this._aspect =1.0;\n        this._cameraPersp = null;\n        this._cameraOrtho = null;\n        this._controls = null;\n        this._sceneHeight = 10;\n        this._renderer = null;\n        this._lights = new Array();\n        this._raycaster = new THREE.Raycaster();\n        this._mouse = new THREE.Vector2();\n        this._model = { \n            geometry: null,\n            attr_normal: null,\n            buf_normal: null,\n            attr_color: null,\n            buf_color: null,\n            attr_position: null,\n            buf_position: null,\n            offset: 0,\n            template_size: 0,\n            node_count: 0,\n            mesh: null,\n            viewmode: null,\n            mode: 0,\n            input_pickers: null,\n            picked: null\n        };\n        this._animation = {\n            animateGeometry: true,\n            mode: 'rows', //  one of 'rows', 'ordered'\n            done: false,\n            node: { col:0, row: 0 },\n            row: 0\n        };\n        this._inputClickCallback = null;\n    }\n\n    render() {\n        if( this._viewmode === 'folded' ) {\n            this._renderer.render( this._scene, this._cameraPersp );\n        } else {\n            this._renderer.render( this._scene, this._cameraOrtho );\n        }\n\n    }\n\n    animate() { \n        if( this._animation.done )\n            return;\n        requestAnimationFrame( ()=>{this.animate()} );\n        this._controls.update();\n        this._updateCellsAnimated();\n        this.render();\n    }\n\n    init() {\n        console.log( 'Initializing WebGL' );\n  \n        this._scene = new THREE.Scene();\n        this._scene.background = new THREE.Color( this.backgroundColor );\n        this._aspect = this.viewportWidth / this.viewportHeight;\n        this._cameraPersp = new THREE.PerspectiveCamera( 75, this._aspect, 0.1, 1000 );\n        this._cameraOrtho = new THREE.OrthographicCamera( \n                this._aspect * this._sceneHeight / -2, \n                this._aspect * this._sceneHeight / 2, \n                -this._sceneHeight / 2, this._sceneHeight / 2 );\n        \n        this._renderer = new THREE.WebGLRenderer( {antialias:true} );\n        this._renderer.setSize( this.viewportWidth, this.viewportHeight );\n        this.container.appendChild( this._renderer.domElement );\n\n        /*let geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        let material = new THREE.MeshNormalMaterial();\n        let cube = new THREE.Mesh( geometry, material );\n        this._scene.add( cube );*/\n        this._cameraOrtho.position.z = 10;\n        this._cameraPersp.position.z = 10;\n\n        // Setup orbit controls\n        this._controls = new THREE.OrbitControls( this._cameraPersp, this._renderer.domElement );\n        this._controls.addEventListener( 'change', () => { this.render(); } );\n        //controls.enableRotate = false;\n\n        // Setup lights for the 3d view\n        let lights = this._lights;\n        lights[0] = new THREE.AmbientLight( 0x13162B, 4 );\n        lights[0].position.set( 0, 0, 0 );\n        lights[0].target = new THREE.Vector3( 0, 0, 0 );\n        this._scene.add( lights[0] );\n        \n        lights[1] = new THREE.DirectionalLight( 0xEDE2C7 );\n        lights[1].position.set( 10, 10, 10 );\n        //lights[1].target = new THREE.Vector3( 0, 0, 0 );\n        this._scene.add( lights[1] );\n        \n        lights[2] = new THREE.DirectionalLight( 0xC7E8ED );\n        lights[2].position.set( 0, -10, -10 );\n        //lights[2].target = new THREE.Vector3( 0, 0, 0 );\n        this._scene.add( lights[2] );\n        \n        lights[3] = new THREE.DirectionalLight( 0xC8D9C8 );\n        lights[3].position.set( -10, 10, 0 );\n       // lights[3].target = new THREE.Vector3( 0, 0, 0 );\n        this._scene.add( lights[3] );\n        \n   //     this._scene.add( new THREE.DirectionalLightHelper( lights[0], 0.2 ));\n   //     this._scene.add( new THREE.DirectionalLightHelper( lights[1], 0.2 ));\n   //     this._scene.add( new THREE.DirectionalLightHelper( lights[2], 0.2 ));\n        this.render();\n\n        window.addEventListener( 'resize', () => { this._onWindowResize(); } );\n        document.addEventListener( 'mousemove', (e) => { this._onDocumentMousemove(e); } );\n        this.container.addEventListener( 'click', () => { this._onClick(); } );\n\n    }\n\n    updateCamera() {\n        let sceneHeight = this._sceneHeight;\n        let aspect = this._aspect;\n        this._cameraPersp.aspect = aspect;\n        this._cameraPersp.updateProjectionMatrix();\n        this._cameraOrtho.left = aspect * sceneHeight / -2;\n        this._cameraOrtho.right = aspect * sceneHeight / 2;\n        this._cameraOrtho.top = sceneHeight / 2;\n        this._cameraOrtho.bottom = sceneHeight / -2;\n        this._cameraOrtho.updateProjectionMatrix();\n\n    }\n\n    set viewmode( m ) {\n        let viewmode = this._viewmode;\n        let controls = this._controls;\n\n        if( viewmode === 'folded' && m !== 'folded' ) {\n            controls.reset();\n            controls.object = this._cameraOrtho;\n            controls.enableRotate =false;\n        } else if ( viewmode !== 'folded' && m === 'folded' ) {\n            controls.reset();\n            controls.object = this._cameraPersp;\n            controls.enableRotate = true;\n        }\n        this._viewmode =m;\n        //this.updateGeometry();\n\n    }\n\n    setOnInputClicked( func ) {\n        this._inputClickCallback = func;\n    }\n\n    clearGeometry() {\n        let scene =this._scene;\n        for(let i = 0; i < scene.children.length; i++){\n            if( scene.children[i].name !== 'helper' &&\n                    !(scene.children[i] instanceof THREE.AmbientLight) &&\n                    !(scene.children[i] instanceof THREE.DirectionalLight) ) {\n                scene.remove(scene.children[i]);\n                i--;\n            }\n        }\n    }\n\n    update() {\n        const automaton =this.automaton;\n        if( automaton === null )\n            return;\n        // See if we need to update the geometry at all, criteria are:\n        // - Different viewmode\n        // - More cells \n        // - Different mode\n        if( this._viewmode !== this._model.viewmode \n            || this.automaton.opts.mode !== this._model.mode\n            || this.automaton.nodeCount != this._model.node_count ) {\n            console.log( 'Viewport: rebuilding geometry' );\n            let populate = !this._animation.animateGeometry;\n            this._updateGeometry( populate );\n        }\n        else {\n            if( !this._animation.animateGeometry )\n                this._updateCells();\n        }\n        if( this._animation.animateGeometry ) {\n            this._updateCells( true );\n            this._animation.node = automaton.first(); this._animation.row =0;\n            this._animation.done = false;\n            this.animate();\n        }\n        this.render();\n    }\n    \n    //\n    // Private event listeners\n    //\n    \n    _onWindowResize() {\n        let container = this.container;\n\n        this.viewportWidth = container.offsetWidth;\n        this.viewportHeight = container.offsetHeight;\n        this._aspect = this.viewportWidth / this.viewportHeight;\n        this.updateCamera();\n        this._renderer.setSize( this.viewportWidth, this.viewportHeight );\n        this.render();\n    }\n\n    _onDocumentMousemove( event ) {\n        this._mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n        this._mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n        if( this.viewmode !== 'folded' ) {\n            let render =false;\n\n            this._raycaster.setFromCamera( this._mouse, this._cameraOrtho );\n            let intersects = this._raycaster.intersectObjects( this._model.input_pickers );\n\n            if( this._model.picked !== null ) {\n                this._model.picked.material.opacity = 0.0;\n                this._model.picked = null;\n                render =true;\n            }\n            if( intersects.length !== 0 ) {\n                intersects[0].object.material.opacity = 0.5;\n                this._model.picked = intersects[0].object;\n                render =true;\n            }\n            if( render )\n                this.render();\n        }\n    }\n\n    _onClick() {\n        let picked = this._model.picked;\n        if( picked !== null ) {\n            if( typeof this._inputClickCallback === 'function' ) {\n                this._inputClickCallback( picked.userData.col );\n            }\n        }\n    }\n\n    //\n    // Private functions\n    //\n    \n    \n    /*\n     * Set the geometry's color at position of node to color\n     */\n    _setColor( node, color ) {\n        let M = this._model;\n        let n = M.template_size; // elements per template geometry\n        let offset = node * n;\n        for( let i =0; i < n; i+=3 ) {\n            M.buf_color[offset+i] = color.r * 255;\n            M.buf_color[offset+i+1] = color.g * 255;\n            M.buf_color[offset+i+2] = color.b * 255;\n        }\n        if( M.attr_color.updateRange.count === -1 ) {\n            M.attr_color.updateRange.offset = offset;\n            M.attr_color.updateRange.count = n;\n        } else {\n            let old_offset = M.attr_color.updateRange.offset;\n            if( old_offset < offset ) {\n                M.attr_color.updateRange.count = (offset - old_offset) + n;\n            }\n            else {\n                M.attr_color.updateRange.offset = offset;\n                M.attr_color.updateRange.count = (old_offset - offset) + n;\n            }\n        }\n    }\n\n    /* \n     * Given a col and row, return the color that represents the value\n     * of this node in the automaton\n     */\n    _nodeColor( node ) {\n        let color = this.backgroundColor;\n        let value = this.automaton.value( node );\n        if( value >= 0 ) \n            color = this.palette[ value ];\n        return new THREE.Color( color );\n    }\n\n    /*\n     * Given a col and row, calculate the offset within the geometry\n     */\n    _calcNodeOffset( { col, row } ) {\n        // FIXME: add support for modes\n        let width = this.automaton.width;\n        let rowoffs =0;\n        for( let i =0; i < row; i++ )\n            rowoffs += (width--);\n        return rowoffs + col;\n    }\n\n    /*\n     * Change the colors of the geometry such that it represents the current automaton \n     */\n    _updateCells( only_clean = false ) {\n        const automaton =this.automaton;\n        if( automaton === null )\n            return;\n\n        let node =0;\n        if( !only_clean ) {\n            for( let i =0; i < automaton.rows; i++ ) {\n                for( let j =0; j < automaton.rowLength(i); j++ ) {\n                    let color = this._nodeColor( { row: i, col: j } );\n                    this._setColor( this._calcNodeOffset( { col: j, row: i } ), new THREE.Color( color ) );\n\n                    node++;\n                }\n            }\n        }\n        // Make the rest of the cells blank\n        for( let n =node; n < this._model.node_count; n++ ) {\n            this._setColor( n, new THREE.Color( this.backgroundColor ) );\n        }\n        // Update the buffer\n        this._model.attr_color.needsUpdate =true;\n    }\n\n    /*\n     * Change the colors of the geometry such that it represents the current automaton,\n     * when animated, this function performs the next step in the animation.\n     */\n    _updateCellsAnimated() {\n        const automaton =this.automaton;\n        if( automaton === null )\n            return;\n\n        if( this._animation.mode === 'ordered' ) {\n            let node = this._animation.node;\n            let color = this._nodeColor( node );\n            let offset = this._calcNodeOffset( node );\n\n            this._setColor( offset, color );\n            if( equals( node, automaton.last() ) )\n                this._animation.done =true;\n            else\n                this._animation.node = automaton.next( node );\n        } else if( this._animation.mode === 'rows' ) {\n            let row = this._animation.row;\n            for( let j =0; j < automaton.rowLength(row); j++ ) {\n                let node = { col: j, row: row };\n                let color = this._nodeColor( node );\n                let offset = this._calcNodeOffset( node );\n                this._setColor( offset, color );\n            }\n            if( row+1 === automaton.rows )\n                this._animation.done =true;\n            else\n                this._animation.row++;\n        }\n\n        // Update the buffer\n        this._model.attr_color.needsUpdate =true;\n    }\n\n    /*\n     * Create a new geometry (mesh) based on the size of the automaton \n     * and the viewmode. Discards all previous geometry.\n     */\n    _updateGeometry( populate = true ) { \n        const automaton =this.automaton;\n        if( automaton === null )\n            return;\n        const viewmode =this._viewmode;\n        const right = !automaton.opts.foldToRight; // Position of the pivot\n\n        // Cleanup from previous calls\n        //\n        \n        let M = this._model;\n        if( M.geometry !== null ) {\n            this._scene.remove( M.mesh );\n           /* M.attr_position.setArray(null);\n            M.attr_normal.setArray(null);\n            M.attr_color.setArray(null);*/\n            M.geometry.dispose();\n            for( let i =0; i < M.input_pickers.length; i++ ) {\n                this._scene.remove( M.input_pickers[i] );\n            }\n            \n        }\n        M.input_pickers = new Array();\n        \n        // For some viewmode we use a template geometry\n        // Here we prepare this geometry and the material\n\n        let template =null;\n        let material =null;\n        \n        M.template_size =0;\n        if( viewmode !== 'folded' ) {\n            material = new THREE.MeshBasicMaterial( {side: THREE.DoubleSide, vertexColors: THREE.VertexColors} );\n            if( viewmode === 'brick' ) {\n                template = new THREE.PlaneBufferGeometry( 1, 1 );\n            } \n            else if ( viewmode === 'diamond' ) {\n                template = new THREE.PlaneBufferGeometry( 1, 1 );\n                template.rotateZ( Math.PI * 0.25 );\n                template.scale( 1 / diamondWidth, 1 , 1 );\n            } \n            else if( viewmode === 'circle' ) {\n                template = new THREE.CircleBufferGeometry( 0.5, 32 );\n            }\n\n            template = template.toNonIndexed();\n            M.template_size = template.getAttribute( 'position' ).array.length; \n        }\n        else {\n            material = new THREE.MeshStandardMaterial( {side: THREE.DoubleSide, vertexColors: THREE.VertexColors, metalness: 0 } );\n            template = new THREE.SphereBufferGeometry( 1.0, 8, 8 );\n            template = template.toNonIndexed();\n            M.template_size = template.getAttribute( 'position' ).array.length; \n        }\n\n\n        // Prepare buffers for the geometry\n\n        M.geometry = new THREE.BufferGeometry();\n        let array_size = automaton.nodeCount * M.template_size; \n        M.buf_position = new Float32Array( array_size );\n        M.buf_color = new Uint8Array( array_size );\n        M.buf_normal = new Int16Array( array_size );\n        M.offset =0;\n        M.node_count = automaton.nodeCount;\n\n        let addInstance = function( color, translate ) {\n            let positions = template.getAttribute( 'position' ).array;\n            let normals = template.getAttribute( 'normal' ).array;\n            for( let i =0; i < M.template_size; i+=3 ) {\n                M.buf_position[M.offset+i] = positions[i] + translate.x;\n                M.buf_position[M.offset+i+1] = positions[i+1] + translate.y;\n                M.buf_position[M.offset+i+2] = positions[i+2] + translate.z;\n\n                M.buf_color[M.offset+i] = color.r * 255;\n                M.buf_color[M.offset+i+1] = color.g * 255;\n                M.buf_color[M.offset+i+2] = color.b * 255;\n                \n                M.buf_normal[M.offset+i] = normals[i] * 32767;\n                M.buf_normal[M.offset+i+1] = normals[i+1] * 32767;\n                M.buf_normal[M.offset+i+2] = normals[i+2] * 32767;\n            }\n            M.offset += positions.length;\n        };\n\n        let foldedPosition = function( row, col, width, inputLength, right, mode ) {\n            let p = new THREE.Vector3( 0, 0, 0 );\n            // The pivot position determines where the rows start\n            let coneCol = right ? (width-1) - col : col;\n            // Map the `triangle row' onto the `diagonal row'\n            let coneRow = row + coneCol;\n            let fold =!(coneRow < inputLength);\n            let coneRowWidth = coneRow + (fold ? 0 : 1);\n\n            // Calculate the position of the node on the `cone'\n            let offset = 0;//(coneRow%2 === 0) ? 0.125 : -0.125;\n            let phi = (coneCol+offset) * (2 * Math.PI / (coneRowWidth));\n            let radius = coneRowWidth / Math.PI;\n\n            p.x = Math.cos( phi ) * radius;\n            p.z = Math.sin( phi ) * radius;\n\n            let yoffset = 2 * coneCol / coneRowWidth;\n            p.y = -coneRow*2 + (fold ? yoffset : 0);\n\n            return p;\n        }\n\n        let heightstep = 1.0;\n        if( automaton.opts.mode % 2 === 0 ) {\n            if( viewmode === 'diamond' )\n                heightstep = 1 / diamondWidth;\n            else if( viewmode === 'circle' ) \n                heightstep = 0.5 + Math.sqrt(0.125);\n        }\n\n        let position = new THREE.Vector3 ( \n                0, \n                (automaton.rows - 1) * heightstep / 2,\n                0 );\n        for( let i =0; i < automaton.rows; i++ ) {\n            for( let j =0; j < automaton.rowLength(i); j++ ) {\n                position.x = -automaton.width / 2 + 0.5 * i + j; \n                \n                let color =populate ? this._nodeColor( {row: i, col: i} ) : new THREE.Color( this.backgroundColor );\n                \n                if( viewmode !== 'folded' ) {\n                    // Add an instance to the main geometry\n                    addInstance( color, position );\n\n                    // If the node is an input node, also add a picking-mesh for user input\n                    if( i === 0 ) {\n                        let g = template.clone();\n                        g.translate( position.x, position.y, 1 );\n                        let picker_material = \n                            new THREE.MeshBasicMaterial( {side: THREE.DoubleSide, color: '#ffffff', transparent: true, opacity: 0.0 } );\n                        let picker_mesh = new THREE.Mesh( g, picker_material );\n                        \n                        picker_mesh.userData.col = j;\n                        this._scene.add( picker_mesh );                       \n                        M.input_pickers.push( picker_mesh );\n                    }\n                }\n                else {\n                    let p = foldedPosition( i, j, automaton.rowLength(i), automaton.opts.input.length, right, automaton.opts.mode );\n                    addInstance( color, p );\n                }\n\n            }\n            position.y -= heightstep;\n        }\n        M.attr_position =new THREE.BufferAttribute(M.buf_position, 3 );\n        M.attr_normal   =new THREE.BufferAttribute(M.buf_normal, 3 );\n        M.attr_color    =new THREE.BufferAttribute(M.buf_color, 3 );\n        M.attr_color.normalized = true;\n        M.attr_normal.normalized = true;\n        M.geometry.addAttribute('position', M.attr_position );\n        M.geometry.addAttribute('normal', M.attr_normal );\n        M.geometry.addAttribute('color', M.attr_color ) ;\n        M.geometry.computeBoundingSphere();\n\n        M.mesh = new THREE.Mesh( M.geometry, material );\n        this._scene.add( M.mesh );\n\n        M.viewmode = viewmode;\n        M.mode = automaton.opts.mode;\n\n        this._sceneHeight = automaton.width * 1.1;\n        this.updateCamera();\n\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./rfexplore/viewport.js","/*  value_equals.js\n    \n    The MIT License (MIT)\n    \n    Copyright (c) 2013-2017, Reactive Sets\n    \n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n    \n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n    \n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n*/\n/* Slightly modified version of https://github.com/ReactiveSets/toubkal/blob/master/lib/util/value_equals.js */\n\n/* -----------------------------------------------------------------------------------------\n equals( a, b [, enforce_properties_order, cyclic] )\n \n Returns true if a and b are deeply equal, false otherwise.\n \n Parameters:\n   - a (Any type): value to compare to b\n   - b (Any type): value compared to a\n \n Optional Parameters:\n   - enforce_properties_order (Boolean): true to check if Object properties are provided\n     in the same order between a and b\n   \n   - cyclic (Boolean): true to check for cycles in cyclic objects\n \n Implementation:\n   'a' is considered equal to 'b' if all scalar values in a and b are strictly equal as\n   compared with operator '===' except for these two special cases:\n     - 0 === -0 but are not equal.\n     - NaN is not === to itself but is equal.\n   \n   RegExp objects are considered equal if they have the same lastIndex, i.e. both regular\n   expressions have matched the same number of times.\n   \n   Functions must be identical, so that they have the same closure context.\n   \n   \"undefined\" is a valid value, including in Objects\n   \n   106 automated tests.\n   \n   Provide options for slower, less-common use cases:\n   \n     - Unless enforce_properties_order is true, if 'a' and 'b' are non-Array Objects, the\n       order of occurence of their attributes is considered irrelevant:\n         { a: 1, b: 2 } is considered equal to { b: 2, a: 1 }\n     \n     - Unless cyclic is true, Cyclic objects will throw:\n         RangeError: Maximum call stack size exceeded\n*/\nexport default function equals( a, b, enforce_properties_order, cyclic ) {\nreturn a === b       // strick equality should be enough unless zero\n  && a !== 0         // because 0 === -0, requires test by _equals()\n  || _equals( a, b ) // handles not strictly equal or zero values\n;\n\nfunction _equals( a, b ) {\n  // a and b have already failed test for strict equality or are zero\n  \n  var s, l, p, x, y;\n  \n  // They should have the same toString() signature\n  if ( ( s = toString.call( a ) ) !== toString.call( b ) ) return false;\n  \n  switch( s ) {\n    default: // Boolean, Date, String\n      return a.valueOf() === b.valueOf();\n    \n    case '[object Number]':\n      // Converts Number instances into primitive values\n      // This is required also for NaN test bellow\n      a = +a;\n      b = +b;\n      \n      return a ?         // a is Non-zero and Non-NaN\n          a === b\n        :                // a is 0, -0 or NaN\n          a === a ?      // a is 0 or -O\n          1/a === 1/b    // 1/0 !== 1/-0 because Infinity !== -Infinity\n        : b !== b        // NaN, the only Number not equal to itself!\n      ;\n    // [object Number]\n    \n    case '[object RegExp]':\n      return a.source   == b.source\n        && a.global     == b.global\n        && a.ignoreCase == b.ignoreCase\n        && a.multiline  == b.multiline\n        && a.lastIndex  == b.lastIndex\n      ;\n    // [object RegExp]\n    \n    case '[object Function]':\n      return false; // functions should be strictly equal because of closure context\n    // [object Function]\n    \n    case '[object Array]':\n      if ( cyclic && ( x = reference_equals( a, b ) ) !== null ) return x; // intentionally duplicated bellow for [object Object]\n      \n      if ( ( l = a.length ) != b.length ) return false;\n      // Both have as many elements\n      \n      while ( l-- ) {\n        if ( ( x = a[ l ] ) === ( y = b[ l ] ) && x !== 0 || _equals( x, y ) ) continue;\n        \n        return false;\n      }\n      \n      return true;\n    // [object Array]\n    \n    case '[object Object]':\n      if ( cyclic && ( x = reference_equals( a, b ) ) !== null ) return x; // intentionally duplicated from above for [object Array]\n      \n      l = 0; // counter of own properties\n      \n      if ( enforce_properties_order ) {\n        var properties = [];\n        \n        for ( p in a ) {\n          if ( a.hasOwnProperty( p ) ) {\n            properties.push( p );\n            \n            if ( ( x = a[ p ] ) === ( y = b[ p ] ) && x !== 0 || _equals( x, y ) ) continue;\n            \n            return false;\n          }\n        }\n        \n        // Check if 'b' has as the same properties as 'a' in the same order\n        for ( p in b )\n          if ( b.hasOwnProperty( p ) && properties[ l++ ] != p )\n            return false;\n      } else {\n        for ( p in a ) {\n          if ( a.hasOwnProperty( p ) ) {\n            ++l;\n            \n            if ( ( x = a[ p ] ) === ( y = b[ p ] ) && x !== 0 || _equals( x, y ) ) continue;\n            \n            return false;\n          }\n        }\n        \n        // Check if 'b' has as not more own properties than 'a'\n        for ( p in b )\n          if ( b.hasOwnProperty( p ) && --l < 0 )\n            return false;\n      }\n      \n      return true;\n    // [object Object]\n  } // switch toString.call( a )\n} // _equals()\n\n/* -----------------------------------------------------------------------------------------\n   reference_equals( a, b )\n   \n   Helper function to compare object references on cyclic objects or arrays.\n   \n   Returns:\n     - null if a or b is not part of a cycle, adding them to object_references array\n     - true: same cycle found for a and b\n     - false: different cycle found for a and b\n   \n   On the first call of a specific invocation of equal(), replaces self with inner function\n   holding object_references array object in closure context.\n   \n   This allows to create a context only if and when an invocation of equal() compares\n   objects or arrays.\n*/\nfunction reference_equals( a, b ) {\n  var object_references = [];\n  \n  return ( reference_equals = _reference_equals )( a, b );\n  \n  function _reference_equals( a, b ) {\n    var l = object_references.length;\n    \n    while ( l-- )\n      if ( object_references[ l-- ] === b )\n        return object_references[ l ] === a;\n    \n    object_references.push( a, b );\n    \n    return null;\n  } // _reference_equals()\n} // reference_equals()\n} // equals()\n\n\n\n\n// WEBPACK FOOTER //\n// ./rfexplore/value_equals.js","const TEXT_TYPE = 'text';\nconst BUTTON_TYPE = 'button';\n\nconst NO_ACTION = 'none';\nconst FUNC_ACTION = 'func';\nconst URL_ACTION = 'url';\nconst DROPDOWN_ACTION = 'dropdown';\n\nclass Menuitem {\n\n    constructor( { container, text = '', iconclass = '', type = 'text', action = 'none' } ) {\n        this.container = container;\n        this._text = text;\n        this._iconclass = iconclass;\n        this._type = type;\n        this._action = action;\n        this._callback = null;\n\n        this._liNode = null;\n        this._aNode = null;\n        this._textNode = null;\n        this._iconNode = null;\n\n        this._appendElem();\n    }\n\n    action( obj ) {\n        if( typeof obj === 'function' ) {\n            this._action = FUNC_ACTION;\n            this._callback = obj;\n            this._aNode.setAttribute( 'href', '#' );\n        } else if( typeof obj === 'string' ) {\n            this._action = URL_ACTION;\n            this._callback = null;\n            this._aNode.setAttribute( 'href', obj );\n        }\n        return this;\n    }\n\n    set text( t ) {\n        this._text = t;\n        this._textNode.nodeValue = t;\n    }\n\n    get text() { return this._text; }\n\n    set iconclass( c ) {\n        this._iconclass = c;\n        if( this._text != '' )\n            this._iconNode.className = `text-left ${c}`;\n        else\n            this._iconNode.className = `${c}`;\n    }\n\n    get iconclass() { return this._iconclass; }\n\n    _appendElem() {\n        this._liNode =document.createElement( 'li' );\n        this.container.appendChild( this._liNode );\n\n        switch( this._type ) {\n            case TEXT_TYPE:\n                this._aNode = document.createElement( 'a' );\n                this._liNode.appendChild( this._aNode );\n                break;\n            case BUTTON_TYPE:\n                this._aNode = document.createElement( 'a' );\n                this._aNode.className = 'button';\n                this._liNode.appendChild( this._aNode );\n                break;\n        }\n        this._textNode = document.createTextNode( this._text );\n        this._aNode.appendChild( this._textNode );\n        this._iconNode = document.createElement( 'i' );\n        this._aNode.appendChild( this._iconNode );\n        this.iconclass = this._iconclass;\n\n        this._aNode.addEventListener( 'click', ()=>{this._clicked();} );\n    }\n    _clicked() {\n        switch( this._action ) {\n            case NO_ACTION:\n                break;\n            case FUNC_ACTION:\n                if( typeof this._callback === 'function' )\n                    this._callback();\n                break;\n            case URL_ACTION:\n                break;\n            case DROPDOWN_ACTION:\n                // TODO\n                break;\n        }\n    }\n}\n\nexport default class Menubar {\n    constructor( container, { subgroup = false, parent = null, panel =false } = {} ) {\n        let parentContainer =container || document.body;\n        this._subgroup =subgroup;\n        this._parent = parent;\n\n        if( subgroup ) {\n            this.container = parentContainer;\n        } else {\n            this.container =document.createElement( 'div' );\n            this.container.className = \"menubar\";\n            parentContainer.appendChild( this.container );\n        }\n\n        if( !subgroup || subgroup && panel ) {\n            this._rootPanel =document.createElement( 'div' );\n            this._rootPanel.className = \"panel\";\n            this.container.appendChild( this._rootPanel );\n        } else {\n            this._rootPanel = parent._rootPanel;\n        }\n        \n        this._ulNode = document.createElement( 'ul' );\n        this._rootPanel.appendChild( this._ulNode );\n\n        this._items = new Array();\n        this._groups = new Array();\n    }\n\n    addGroup() {\n        let group = new Menubar( this.container, { subgroup: true, parent: this } );\n        this._groups.push( group );\n        return group;\n    }\n\n    addPanel() {\n        let group = new Menubar( this.container, { subgroup: true, parent: this, panel: true } );\n        this._groups.push( group );\n        return group;\n    }\n\n    addButton( text = '', iconclass = '' ) {\n        let item = new Menuitem( { container: this._ulNode, text: text, iconclass: iconclass, type: BUTTON_TYPE } );\n        this._items.push( item );\n        return item;\n    }\n\n    addLink( text = '', iconclass = '' ) {\n        let item = new Menuitem( { container: this._ulNode, text: text, iconclass: iconclass, type: TEXT_TYPE } );\n        this._items.push( item );\n        return item;\n    }\n\n    floatLeft() {\n        this._ulNode.className = 'float-left';\n        return this;\n    }\n    \n    floatRight() {\n        this._ulNode.className = 'float-right';\n        return this;\n    }\n    \n    floatCenter() {\n        this._ulNode.className = 'float-center';\n        return this;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./rfexplore/menubar.js"],"sourceRoot":""}